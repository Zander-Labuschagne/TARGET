{
   "scope": "source.tmc - string.quoted.single.tmc - string.quoted.double.tmc",

   "completions":
   [
	{ "trigger": "Joystick\tDevice Reference", "contents": "Joystick" },
	{ "trigger": "Throttle\tDevice Reference", "contents": "Throttle" },
// Common
	{ "trigger": "JOYX\tJoystick X-Axis", "contents": "JOYX" },
	{ "trigger": "JOYY\tJoystick Y-Axis", "contents": "JOYY" },
	{ "trigger": "MOUSE_X_AXIS\tMouse X-Axis", "contents": "MOUSE_X_AXIS" },
	{ "trigger": "MOUSE_Y_AXIS\tMouse Y-Axis", "contents": "MOUSE_Y_AXIS" },
	{ "trigger": "AXIS_NORMAL\tDefault axis direction", "contents": "AXIS_NORMAL" },
	{ "trigger": "AXIS_REVERSED\tReverses axis direction", "contents": "AXIS_REVERSED" },
	{ "trigger": "MAP_ABSOLUTE\tUsual behavior of axis", "contents": "MAP_ABSOLUTE" },
	{ "trigger": "MAP_RELATIVE\tAxis does not recenter", "contents": "MAP_RELATIVE" },

// Keywords   	
	{ "trigger": "PULSE\tMomentary press (25ms)", "contents": "PULSE + $0" },
	{ "trigger": "KEYON\tPress and hold", "contents": "KEYON + $0" },
	{ "trigger": "LOCK\tChain Mutex", "contents": "LOCK" },
	{ "trigger": "DOWN\tHold key", "contents": "DOWN + $0" },
	{ "trigger": "UP\tRelease key", "contents": "UP + $0" },
	{ "trigger": "IOTOGGLE\tToggle for I/O button", "contents": "IOTOGGLE" },
	{ "trigger": "UDTOGGLE\tToggle for U/D buttons", "contents": "UDTOGGLE" },
	{ "trigger": "CURRENT\tCurrent Value", "contents": "CURRENT" },
	{ "trigger": "0\tNull Event", "contents": "0" },
	{ "trigger": "true\tTrue Bool", "contents": "1" },
	{ "trigger": "false\tFalse Bool", "contents": "0" },
	{ "trigger": "TRUE\tFalse Bool", "contents": "1" },
	{ "trigger": "FALSE\tFalse Bool", "contents": "0" },
	{ "trigger": "MODE_EXCLUDED\tExclude device from virtual controller", "contents": "MODE_EXCLUDED" },

// A-10
	{ "trigger": "THR_LEFT\tLeft Throttle Axis(A10)", "contents": "THR_LEFT" },
	{ "trigger": "THR_RIGHT\tRight Throttle Axis(A10)", "contents": "THR_RIGHT" },
	{ "trigger": "SCX\tTDC Slew X-Axis(A10)", "contents": "SCX" },
	{ "trigger": "SCY\tTDC Slew Y-Axis(A10)", "contents": "SCY" },
	{ "trigger": "THR_FC\tThrottle Friction Slider(A10)", "contents": "THR_FC" },

// F-16
	{ "trigger": "RDR_X\t(F16)", "contents": "RDR_X" },
	{ "trigger": "RDR_Y\t(F16)", "contents": "RDR_Y" },
	{ "trigger": "MAN_RNG\t(F16)", "contents": "MAN_RNG" },
	{ "trigger": "ANT_ELEV\t(F16)", "contents": "ANT_ELEV" },

// T-16000M | F-16
	{ "trigger": "THROTTLE\tThrottle Axis(F16 & T16000M)", "contents": "THROTTLE" },
	{ "trigger": "RUDDER\tRudder Axis(F16 & T16000M)", "contents": "RUDDER" },

// LED
	{ "trigger": "LED_INTENSITY\tSet LED intensity", "contents": "LED_INTENSITY" },
	{ "trigger": "LED_ONOFF\tSet LED ON/OFF", "contents": "LED_ONOFF" },
	{ "trigger": "LED_CURRENT", "contents": "LED_CURRENT" },
	{ "trigger": "LED1\tLED #1", "contents": "LED1" },
	{ "trigger": "LED2\tLED #2", "contents": "LED2" },
	{ "trigger": "LED3\tLED #3", "contents": "LED3" },
	{ "trigger": "LED4\tLED #4", "contents": "LED4" },
	{ "trigger": "LED5\tLED #5", "contents": "LED5" },


// DirectX
	{ "trigger": "DX_X_AXIS\tDirectX X-Axis", "contents": "DX_X_AXIS" },
	{ "trigger": "DX_Y_AXIS\tDirectX Y-Axis", "contents": "DX_Y_AXIS" },
	{ "trigger": "DX_Z_AXIS\tDirectX Z-Axis", "contents": "DX_Z_AXIS" },
	{ "trigger": "DX_XROT_AXIS\tDirectX X-Axis II", "contents": "DX_XROT_AXIS" },
	{ "trigger": "DX_YROT_AXIS\tDirectX Y-Axis II", "contents": "DX_YROT_AXIS" },
	{ "trigger": "DX_ZROT_AXIS\tDirectX Z-Axis II", "contents": "DX_ZROT_AXIS" },
	{ "trigger": "DX_SLIDER_AXIS\tDirectX Slider Axis", "contents": "DX_SLIDER_AXIS" },
	{ "trigger": "DX_THROTTLE_AXIS\tDirectX Throttle Axis", "contents": "DX_THROTTLE_AXIS" },
	{ "trigger": "MOUSE_X_AXIS\tDirectX Mouse X-Axis", "contents": "MOUSE_X_AXIS" },
	{ "trigger": "MOUSE_Y_AXIS\tDirectX Mouse Y-Axis", "contents": "MOUSE_Y_AXIS" },
	{ "trigger": "DX1\tDirectX Button 1", "contents": "DX1" },
	{ "trigger": "DX2\tDirectX Button 2", "contents": "DX2" },
	{ "trigger": "DX3\tDirectX Button 3", "contents": "DX3" },
	{ "trigger": "DX4\tDirectX Button 4", "contents": "DX4" },
	{ "trigger": "DX5\tDirectX Button 5", "contents": "DX5" },
	{ "trigger": "DX6\tDirectX Button 6", "contents": "DX6" },
	{ "trigger": "DX7\tDirectX Button 7", "contents": "DX7" },
	{ "trigger": "DX8\tDirectX Button 8", "contents": "DX8" },
	{ "trigger": "DX9\tDirectX Button 9", "contents": "DX9" },
	{ "trigger": "DX10\tDirectX Button 10", "contents": "DX10" },
	{ "trigger": "DX11\tDirectX Button 11", "contents": "DX11" },
	{ "trigger": "DX12\tDirectX Button 12", "contents": "DX12" },
	{ "trigger": "DX13\tDirectX Button 13", "contents": "DX13" },
	{ "trigger": "DX14\tDirectX Button 14", "contents": "DX14" },
	{ "trigger": "DX15\tDirectX Button 15", "contents": "DX15" },
	{ "trigger": "DX16\tDirectX Button 16", "contents": "DX16" },
	{ "trigger": "DX17\tDirectX Button 17", "contents": "DX17" },
	{ "trigger": "DX18\tDirectX Button 18", "contents": "DX18" },
	{ "trigger": "DX19\tDirectX Button 19", "contents": "DX19" },
	{ "trigger": "DX20\tDirectX Button 20", "contents": "DX20" },
	{ "trigger": "DX21\tDirectX Button 21", "contents": "DX21" },
	{ "trigger": "DX22\tDirectX Button 22", "contents": "DX22" },
	{ "trigger": "DX23\tDirectX Button 23", "contents": "DX23" },
	{ "trigger": "DX24\tDirectX Button 24", "contents": "DX24" },
	{ "trigger": "DX25\tDirectX Button 25", "contents": "DX25" },
	{ "trigger": "DX26\tDirectX Button 26", "contents": "DX26" },
	{ "trigger": "DX27\tDirectX Button 27", "contents": "DX27" },
	{ "trigger": "DX28\tDirectX Button 28", "contents": "DX28" },
	{ "trigger": "DX29\tDirectX Button 29", "contents": "DX29" },
	{ "trigger": "DX30\tDirectX Button 30", "contents": "DX30" },
	{ "trigger": "DX31\tDirectX Button 31", "contents": "DX31" },
	{ "trigger": "DX32\tDirectX Button 32", "contents": "DX32" },
	{ "trigger": "DXHATUP\tDirectX Hat Up", "contents": "DXHATUP" },
	{ "trigger": "DXHATUPRIGHT\tDirectX Hat Up Right", "contents": "DXHATUPRIGHT" },
	{ "trigger": "DXHATRIGHT\tDirectX Hat Right", "contents": "DXHATRIGHT" },
	{ "trigger": "DXHATDOWNRIGHT\tDirectX Hat Down Right", "contents": "DXHATDOWNRIGHT" },
	{ "trigger": "DXHATDOWN\tDirectX Hat Down", "contents": "DXHATDOWN" },
	{ "trigger": "DXHATDOWNLEFT\tDirectX Hat Down Left", "contents": "DXHATDOWNLEFT" },
	{ "trigger": "DXHATLEFT\tDirectX Hat Left", "contents": "DXHATLEFT" },
	{ "trigger": "DXHATUPLEFT\tDirectX Hat Up Left", "contents": "DXHATUPLEFT" },


// Buttons & Switches
	// A-10 Throttle
	{ "trigger": "FLAPU\tFlaps Up(A10)", "contents": "FLAPU" },
	{ "trigger": "FLAPM\tFlaps Mid(A10)", "contents": "FLAPM" },
	{ "trigger": "FLAPD\tFlaps Down(A10)", "contents": "FLAPD" },
	{ "trigger": "EACON\tEAC On(A10)", "contents": "EACON" },
	{ "trigger": "EACOFF\tEAC Off(A10)", "contents": "EACOFF" },
	{ "trigger": "RDRNRM\tRadar Alt Normal(A10)", "contents": "RDRNRM" },
	{ "trigger": "RDRDIS\tRadar Alt Disengaged(A10)", "contents": "RDRDIR" },
	{ "trigger": "APENG\tAutopilot Engage(A10)", "contents": "APENG" },
	{ "trigger": "APDIS\tAutopilot Disengage(A10)", "contents": "APDIS" },
	{ "trigger": "APPAT\tAutopilot Path Hold(A10)", "contents": "APPAT" },
	{ "trigger": "APAH\tAutopilot Alt/Hdg Hold(A10)", "contents": "APAH" },
	{ "trigger": "APALT\tAutopilot Altitude Hold(A10)", "contents": "APALT" },
	{ "trigger": "LDGH\tLanding Gear Horn Silence(A10)", "contents": "LDGH" },
	{ "trigger": "EOLIGN\tEngine Oper Left Ignition(A10)", "contents": "EOLIGN" },
	{ "trigger": "EOLNORM\tEngine Oper Left Normal(A10)", "contents": "EOLNORM" },
	{ "trigger": "EOLMOTOR\tEngine Oper Left Motor(A10)", "contents": "EOLMOTOR" },	
	{ "trigger": "EORIGN\tEngine Oper Right Ignition(A10)", "contents": "EORIGN" },
	{ "trigger": "EORNORM\tEngine Oper Right Normal(A10)", "contents": "EORNORM" },
	{ "trigger": "EORMOTOR\tEngine Oper Right Motor(A10)", "contents": "EORMOTOR" },
	{ "trigger": "EFLNORM\tEngine Fuel Flow Left Normal(A10)", "contents": "EFLNORM" },
	{ "trigger": "EFLOVER\tEngine Fuel Flow Left Override(A10)", "contents": "EFLOVER" },	
	{ "trigger": "EFRNORM\tEngine Fuel Flow Right Normal(A10)", "contents": "EFRNORM" },
	{ "trigger": "EFROVER\tEngine Fuel Flow Right Override(A10)", "contents": "EFROVER" },
	{ "trigger": "APUON\tAPU On(A10)", "contents": "APUON" },
	{ "trigger": "APUOFF\tAPU Off(A10)", "contents": "APUOFF" },
	{ "trigger": "IDLELON\tLeft Engine Idle On(A10)", "contents": "IDLELON" },
	{ "trigger": "IDLERON\tRight Engine Idle On(A10)", "contents": "IDLERON" },
	{ "trigger": "CHF\tChina Hat Forward(A10)", "contents": "CHF" },
	{ "trigger": "CHM\tChina Hat Middle(A10)", "contents": "CHM" },
	{ "trigger": "CHB\tChina Hat Back(A10)", "contents": "CHB" },
	{ "trigger": "BSF\tBoat Switch Forward(A10)", "contents": "BSF" },
	{ "trigger": "BSM\tBoat Switch Middle(A10)", "contents": "BSM" },
	{ "trigger": "BSB\tBoat Switch Back(A10)", "contents": "BSB" },
	{ "trigger": "SPDF\tSpeedbreak Forward(A10)", "contents": "SPDF" },
	{ "trigger": "SPDM\tSpeedbreak Middle(A10)", "contents": "SPDM" },
	{ "trigger": "SPDB\tSpeedbreak Back(A10)", "contents": "SPDB" },
	{ "trigger": "MSP\tMic Switch Press(A10)", "contents": "MSP" },
	{ "trigger": "MSU\tMic Switch Up(A10)", "contents": "MSU" },
	{ "trigger": "MSD\tMic Switch Down(A10)", "contents": "MSD" },
	{ "trigger": "MSL\tMic Switch Left(A10)", "contents": "MSL" },
	{ "trigger": "MSR\tMic Switch Right(A10)", "contents": "MSR" },
	{ "trigger": "CSU\tCoolie Switch Up(A10)", "contents": "CSU" },
	{ "trigger": "CSD\tCoolie Switch Down(A10)", "contents": "CSD" },
	{ "trigger": "CSL\tCoolie Switch Left(A10)", "contents": "CSL" },
	{ "trigger": "CSR\tCoolie Switch Right(A10)", "contents": "CSR" },
	{ "trigger": "SC\tSlew Control Press(A10)", "contents": "SC" },
	{ "trigger": "LTB\tLeft Throttle Button(A10)", "contents": "LTB" },
	{ "trigger": "PSF\tPinky Switch Forward(A10)", "contents": "PSF" },
	{ "trigger": "PSM\tPinky Switch Middle(A10)", "contents": "PSM" },
	{ "trigger": "PSB\tPinky Switch Back(A10)", "contents": "PSB" },
	// A-10 Stick
	{ "trigger": "TG1\tGun Trigger Stage 1", "contents": "TG1" },
	{ "trigger": "TG2\tGun Trigger Stage 2", "contents": "TG2" },
	{ "trigger": "S1\tMaster Mode Control Button", "contents": "S1" },
	{ "trigger": "S2\tWeapons Release Button", "contents": "S2" },
	{ "trigger": "S3\tNosewheel Steering Button", "contents": "S3" },
	{ "trigger": "S4\tPaddle Switch", "contents": "S4" },
	{ "trigger": "H1U\tTrim Switch Up", "contents": "H1U" },
	{ "trigger": "H1D\tTrim Switch Down", "contents": "H1D" },
	{ "trigger": "H1L\tTrim Switch Left", "contents": "H1L" },
	{ "trigger": "H1R\tTrim Switch Right", "contents": "H1R" },
	{ "trigger": "H2U\tTMS Up", "contents": "H2U" },
	{ "trigger": "H2D\tTMS Down", "contents": "H2D" },
	{ "trigger": "H2L\tTMS Left", "contents": "H2L" },
	{ "trigger": "H2R\tTMS Right", "contents": "H2R" },
	{ "trigger": "H3U\tDMS Up", "contents": "H3U" },
	{ "trigger": "H3D\tDMS Down", "contents": "H3D" },
	{ "trigger": "H3L\tDMS Left", "contents": "H3L" },
	{ "trigger": "H3R\tDMS Right", "contents": "H3R" },
	{ "trigger": "H4P\tCMS Press", "contents": "H4P" },
	{ "trigger": "H4U\tCMS Up", "contents": "H4U" },
	{ "trigger": "H4D\tCMS Down", "contents": "H4D" },
	{ "trigger": "H4L\tCMS Left", "contents": "H4L" },
	{ "trigger": "H4R\tCMS Right", "contents": "H4R" },

// Keyboard Keys
	{ "trigger": "L_CTL\tLeft Control", "contents": "L_CTL + $0"},
	{ "trigger": "R_CTL\tRight Control", "contents": "R_CTL + $0"},
	{ "trigger": "L_SHIFT\tLeft Shift", "contents": "L_SHIFT + $0"},
	{ "trigger": "R_SHIFT\tRight Shift", "contents": "R_SHIFT + $0"},
	{ "trigger": "L_ALT\tLeft Alt", "contents": "L_ALT + $0"},
	{ "trigger": "R_ALT\tRight Alt", "contents": "R_ALT + $0"},
	{ "trigger": "L_WIN\tLeft Meta", "contents": "L_WIN + $0"},
	{ "trigger": "R_WIN\tRight Meta", "contents": "R_WIN + $0"},
	{ "trigger": "ESC\tEscape", "contents": "ESC"},
	{ "trigger": "F1\tF1", "contents": "F1"},
	{ "trigger": "F2\tF2", "contents": "F2"},
	{ "trigger": "F3\tF3", "contents": "F3"},
	{ "trigger": "F4\tF4", "contents": "F4"},
	{ "trigger": "F5\tF5", "contents": "F5"},
	{ "trigger": "F6\tF6", "contents": "F6"},
	{ "trigger": "F7\tF7", "contents": "F7"},
	{ "trigger": "F8\tF8", "contents": "F8"},
	{ "trigger": "F9\tF9", "contents": "F9"},
	{ "trigger": "F10\tF10", "contents": "F10"},
	{ "trigger": "F11\tF11", "contents": "F11"},
	{ "trigger": "F12\tF12", "contents": "F12"},
	{ "trigger": "PRNTSCRN\tPrint Screen", "contents": "PRNTSCRN"},
	{ "trigger": "SCRLCK\tScroll Lock", "contents": "SCRLCK"},
	{ "trigger": "BRK\tBreak", "contents": "BRK"},
	{ "trigger": "BSP\tBackspace", "contents": "BSP"},
	{ "trigger": "TAB\tTab", "contents": "TAB"},
	{ "trigger": "ENT\tEnter", "contents": "ENT"},
	{ "trigger": "SPC\tSpace", "contents": "SPC"},
	{ "trigger": "INS\tInsert", "contents": "INS"},
	{ "trigger": "HOME\tHome", "contents": "HOME"},
	{ "trigger": "PGUP\tPage Up", "contents": "PGUP"},
	{ "trigger": "DEL\tDelete", "contents": "DEL"},
	{ "trigger": "END\tEnd", "contents": "END"},
	{ "trigger": "PGDN\tPage Down", "contents": "PGDN"},
	{ "trigger": "UARROW\t🠕 Up Arrow", "contents": "UARROW"},
	{ "trigger": "DARROW\t🠗 Down Arrow", "contents": "DARROW"},
	{ "trigger": "LARROW\t🠔 Left Arrow", "contents": "LARROW"},
	{ "trigger": "RARROW\t🠖 Right Arrow", "contents": "RARROW"},
	{ "trigger": "NUML\tNum Lock", "contents": "NUML"},
	{ "trigger": "KP0\tNum Pad 0", "contents": "KP0"},
	{ "trigger": "KP1\tNum Pad 1", "contents": "KP1"},
	{ "trigger": "KP2\tNum Pad 2", "contents": "KP2"},
	{ "trigger": "KP3\tNum Pad 3", "contents": "KP3"},
	{ "trigger": "KP4\tNum Pad 4", "contents": "KP4"},
	{ "trigger": "KP5\tNum Pad 5", "contents": "KP5"},
	{ "trigger": "KP6\tNum Pad 6", "contents": "KP6"},
	{ "trigger": "KP7\tNum Pad 7", "contents": "KP7"},
	{ "trigger": "KP8\tNum Pad 8", "contents": "KP8"},
	{ "trigger": "KP9\tNum Pad 9", "contents": "KP9"},
	{ "trigger": "KPENT\tNum Pad Enter", "contents": "KPENT"},
// USB Key Codes
	{ "trigger": "USB[0x07]\tUSB code for 'D'", "contents": "USB[0x07]"},


//Preprocessor Directives
	{ "trigger": "include\tinclude \"target.tmh\"", "contents": "include \"${0:target}.tmh\"" },
	{ "trigger": "include\tinclude \".ttm\"", "contents": "include \"$0.ttm\"" },
	// { "trigger": "define\tDefine macro", "contents": "define ${1:/*macro_name*/} ${0:/*keystroke_combo*/}" },
	{ "trigger": "define\tDefine macro", "contents": "define ${1:/*macro_name*/} ${2:/*keystroke_combo*/}		// ${0:description}" },

// Functions
	{ "trigger": "SetKBRate\t(duration_ms, delay_ms)", "contents": "SetKBRate(${1:/*int: duration*/}, ${0:/*int: delay*/}); // PULSE is $1 ms, D() is $0 ms" },
	{ "trigger": "MapKey\t(device, button, output)", "contents": "MapKey(&${1:/*input_device*/}, ${2:/*button*/}, ${0:/*event*/});" },
	// { "trigger": "MapKey\t(device, button, command)", "contents": "MapKey(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*event*/}); // $4 : (${0:description})" },
	{ "trigger": "MapKeyUMD\t(device, button, outputs...)", "contents": "MapKeyUMD(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*up_event*/}, ${4:/*middle_event*/}, ${0:/*down_event*/});" },
	{ "trigger": "MapKeyIO\t(device, button, dx_button)", "contents": "MapKeyIO(&${1:/*input_device*/}, ${2:/*button*/}, ${0:/*directX_button*/});" },
	// { "trigger": "MapKeyIO\t(device, button, dx_button)", "contents": "MapKeyIO(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*directX_button*/}); // $4 : (${0:description})" },
	{ "trigger": "MapKeyIO\t(device, button, outputs...)", "contents": "MapKeyIO(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*out_event*/}, ${0:/*in_event*/});" },
	{ "trigger": "MapKeyIOUMD\t(device, button, outputs...)", "contents": "MapKeyIOUMD(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*up/in_event*/}, ${4:/*up/out_event*/}, ${5:/*middle/in_event*/}, ${6:/*middle/out_event*/}, ${7:/*down/in_event*/}, ${0:/*down/out_event*/});" },
	{ "trigger": "MapKeyR\t(device, button, output)", "contents": "MapKeyR(&${1:/*input_device*/}, ${2:/*button*/}, ${0:/*output*/});" },
	{ "trigger": "MapKeyRIO\t(device, button, outputs...)", "contents": "MapKeyRIO(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*out_event*/}, ${0:/*in_event*/});" },
	{ "trigger": "MapKeyRUMD\t(device, button, outputs...)", "contents": "MapKeyRUMD(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*up_event*/}, ${4:/*middle_event*/}, ${0:/*down_event*/});" },
	{ "trigger": "MapKeyRIOUMD\t(device, button, outputs...)", "contents":  "MapKeyRIOUMD(&${1:/*input_device*/}, ${2:/*button*/}, ${3:/*up/in_event*/}, ${4:/*up/out_event*/}, ${5:/*middle/in_event*/}, ${6:/*middle/out_event*/}, ${7:/*down/in_event*/}, ${0:/*down/out_event*/});" },
	{ "trigger": "MapAxis\t(device, physical_axis, dx_axis)", "contents": "MapAxis(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, ${0:/*directX_axis_name*/});" },
	{ "trigger": "MapAxis\t(device, physical_axis, dx_axis, ...)", "contents": "MapAxis(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, ${3:/*directX_axis_name*/}, ${4:/*axis_direction*/}, ${0:/*axis_mapping*/});" },
	{ "trigger": "RotateDXAxis\t(dx_x_axis, dx_y_axis, degrees)", "contents": "RotateDXAxis(${1:/*directX_x_axis_name*/}, ${2:/*directX_y_axis_name*/}, ${0:/*int: degrees*/});" },
	{ "trigger": "ActKey\t(key)", "contents": "ActKey(${0:/*key*/});" },
	{ "trigger": "SetShiftButton\t(device, shift, device, b1, b2)", "contents": "SetShiftButton(&${1:/*shift_device*/}, ${2:shift_button}, ${3:device}, ${4:button1}, ${0:button2});" },
	{ "trigger": "SetShiftButton\t(device, shift, device, b1, b2, toggle)", "contents": "SetShiftButton(&${1:/*shift_device*/}, ${2:shift_button}, ${3:device}, ${4:button1}, ${5:button2}, ${0:toggle});" },
	{ "trigger": "SetSCurve\t(device, axis, ldz, cdz, rdz, curve, scale)", "contents": "SetSCurve(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, ${3:/*int: left_deadzone*/}, ${4:/*int: center_deadzone*/}, ${5:/*int: right_deadzone*/}, ${6:/*int: curve*/}, ${0:/*int: scale*/});" },
	{ "trigger": "SetJCurve\t(device, physical_axis_value, dx_axis_value)", "contents": "SetJCurve(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, ${3:/*int: physical_axis_value*/}, ${0:/*int: directX_axis_value*/});" },
	{ "trigger": "SetCustomCurve\t(device, axis, mappings...)", "contents": "SetCustomCurve(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, LIST(${3:/*int: physical_axis_value*/}, ${4:/*int: directX_axis_value*/}));" },
	{ "trigger": "TrimDXAxis\t(dx_axis, offset)", "contents": "TrimDXAxis(${1:/*directX_axis_name*/}, ${2:/*int: offset*/});" },
	{ "trigger": "KeyAxis\t(device, axis, layer, axmap)", "contents": "KeyAxis(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, '$3', ${0:/*axmap_program*/});" },
	{ "trigger": "LockAxis\t(device, axis, status)", "contents": "LockAxis(&${1:/*input_device*/}, ${2:/*physical_axis_name*/}, ${0:/*bool: status*/});" },
	{ "trigger": "Configure\t(device, exclude)", "contents": "Configure(&${1:/*input_device*/}, ${0:MODE_EXCLUDED});" },
	{ "trigger": "printf\t(string)", "contents": "printf(\"${0:}\\xa\");" },
	{ "trigger": "DeferCall\t(delay_ms, event)", "contents": "DeferCall(${1:/*int: delay*/}, ${0:/*event*/});" },

// SubFunctions
	{ "trigger": "LED\t(device, setting, intensity)", "contents": "LED(&${1:/*input_device*/}, LED_INTENSITY, ${0:/*int: intensity*/})" },
	{ "trigger": "LED\t(device, setting, operation)", "contents": "LED(&${1:/*input_device*/}, LED_ONOFF, LED_CURRENT ${2:+} LED${0:/*number*/})" },
	{ "trigger": "TEMPO\t(event1, event2)", "contents": "TEMPO(${1:/*event1*/}, ${0:/*event2*/})" },
	{ "trigger": "TEMPO\t(event1, event2, delay_ms)", "contents": "TEMPO(${1:/*event*/}, ${2:/*event2*/}, ${0:500})" },
	{ "trigger": "CHAIN\t(event1, event2, ...)", "contents": "CHAIN(${1:/*event1*/}, ${2:/*event2*/})" },
	{ "trigger": "D\tDelay (33ms)", "contents": "D()" },
	{ "trigger": "D\t(delay_ms)", "contents": "D(${1:/*delay*/})" },
	{ "trigger": "SEQ\t(event1, event2, ...)", "contents": "SEQ(${1:/*event1*/}, ${2:/*event2*/})" },
	{ "trigger": "LIST\t(value1, value2, ...)", "contents": "LIST(${1:/*value1*/}, ${2:/*value2*/})" },
	{ "trigger": "AXIS\t(dx_axis, inc, period_ms)", "contents": "AXIS(${1:/*directX_axis_name*/}, ${2:/*increment*/}, ${0:20})" },
	{ "trigger": "EXEC\t(code_string)", "contents": "EXEC(\"${0:/*your_code*/};\")" },
	{ "trigger": "REXEC\t(x, y, code_string)", "contents": "REXEC(${1:/*x*/}, ${2:/*y*/}, \"${0:/*your_code*/};\")" },
	{ "trigger": "SET\t(value)", "contents": "SET(${0:/*value*/})" },
	{ "trigger": "AXMAP1\t(zones, 2events...)", "contents": "AXMAP1(${1:/*int: zone_count*/}, ${2:/*up_event*/}, ${3:/*down_event*/})" },
	{ "trigger": "AXMAP1\t(zones, 3events...)", "contents": "AXMAP1(${1:/*int: zone_count*/}, ${2:/*up_event*/}, ${3:/*down_event*/}, ${0:/*center_event*/})" },
	{ "trigger": "AXMAP2\t(zones, event1, event2, ...)", "contents": "AXMAP2(${1:/*int: zone_count*/}, ${2:/*event1*/}, ${3:/*event2*/})" },
   ]
}